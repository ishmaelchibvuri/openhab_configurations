// ON SYSTEM STARTUP

rule "SYSTEM INITIALIZATION"
when
  System started //ON SYSTEM START
then  
  if(now.getHourOfDay < 18 && now.getHourOfDay > 5)  {
  
  OU_Backyard_Light.sendCommand(OFF)
  OU_Garage_Light.sendCommand(OFF)
  
  GF_Kitchen_Light.sendCommand(OFF)  
  GF_Dining_Light.sendCommand(OFF)  
  GF_LivingRoom_Light.sendCommand(OFF)   
  F2_KidsRoom_Light.sendCommand(OFF) 
  F2_Bathroom_Light.sendCommand(OFF)
  
  logInfo("POWER_IS_BACK","Power Restored : Outdoors lights turned OFF")
  sendNotification("ishmaelchibvuri@gmail.com", "Power Restored : Outdoors lights turned OFF","")
  sendMail("montecastellonotifications@gmail.com", "POWER_IS_BACK", "Power Restored : Outdoors lights turned OFF")
  
    }
    else {
	
  OU_Backyard_Light.sendCommand(ON)
  OU_Garage_Light.sendCommand(ON)    
  GF_Dining_Light.sendCommand(ON) 
  
  //TURN OFF AFTER 2HRS
		createTimer(now.plusMinutes(120)) [| // 120mins
        	if (GF_Dining_Light.state==ON) {				
				sendCommand(GF_Dining_Light, OFF)
				}
    	] 
		
  logInfo("POWER_IS_BACK","Power Restored : Outdoors lights turned ON")
  sendNotification("ishmaelchibvuri@gmail.com", "Power Restored : Outdoors lights turned ON","")
  sendMail("montecastellonotifications@gmail.com", "POWER_IS_BACK", "Power Restored : Outdoors lights turned ON")
  
    } 	
	sendCommand(OU_Water_Pump, OFF) // Turn Off Sprinkler
end

// OUTDOORS LIGHTS RULES

rule "OUTSIDE_LIGHTS_ON"
when
  Time cron "0 0 18 1/1 * ? *" //EVERYDAY AT 1800HRS
then
  OU_Backyard_Light.sendCommand(ON)
  OU_Garage_Light.sendCommand(ON)  
  
  logInfo("OUTSIDE_LIGHTS_ON","Outdoors lights have been turned ON")
  sendNotification("ishmaelchibvuri@gmail.com", "Outdoors lights have been turned ON","")
  sendMail("montecastellonotifications@gmail.com", "OUTSIDE_LIGHTS_ON", "Outdoors lights have been turned on")
end

rule "OUTSIDE_LIGHTS_OFF"
when
  Time cron "0 0 6 1/1 * ? *" //EVERYDAY AT 0600HRS
then
  OU_Backyard_Light.sendCommand(OFF)
  OU_Garage_Light.sendCommand(OFF)  
  
  logInfo("OUTSIDE_LIGHTS_OFF","Outdoors lights have been turned OFF")  
  sendNotification("ishmaelchibvuri@gmail.com", "Outdoors lights have been turned OFF","")
  sendMail("montecastellonotifications@gmail.com", "OUTSIDE_LIGHTS_OFF", "Outdoors lights have been turned OFF")
end



// KEITH LIGHT RULES


rule "KIKI_LIGHT_ON"
when
  Time cron "0 15 19 1/1 * ? *" //EVERYDAY AT 1915HRS
then
  F2_KidsRoom_Light.sendCommand(ON)  


//TURN OFF AFTER 1.5HRS
		createTimer(now.plusMinutes(90)) [|
        	if (F2_KidsRoom_Light.state==ON) {				
				sendCommand(F2_KidsRoom_Light, OFF)
				}
    	] 
		
  logInfo("KIKI_LIGHT_ON","Keith room light has been turned ON") 
  sendNotification("ishmaelchibvuri@gmail.com", "Keith room light has been turned ON","")
  sendMail("montecastellonotifications@gmail.com", "KIKI_LIGHT_ON", "Keith room light has been turned ON")
end


rule "SIMULATE_KIKI_TOILET_0015HRS"
when
  Time cron "0 15 1 1/1 * ? *" //EVERYDAY AT 0115HRS
then
  F2_KidsRoom_Light.sendCommand(ON)  
  F2_Bathroom_Light.sendCommand(ON)

//TURN OFF AFTER 5MINS
		createTimer(now.plusMinutes(6)) [|
        	if (F2_KidsRoom_Light.state==ON) {				
				sendCommand(F2_KidsRoom_Light, OFF)
				}
    	] 
		
		
//TURN OFF AFTER 2MINS
		createTimer(now.plusMinutes(3)) [|
        	if (F2_Bathroom_Light.state==ON) {				
				sendCommand(F2_Bathroom_Light, OFF)
				}
    	]
		
  logInfo("SIMULATE_KIKI_TOILET_0015HRS","Simulation of Kiki Going to Toilet at 0015hrs triggered") 
  sendNotification("ishmaelchibvuri@gmail.com", "Simulation of Kiki Going to Toilet at 0015hrs triggered","")
  sendMail("montecastellonotifications@gmail.com", "SIMULATE_KIKI_TOILET_0015HRS", "Simulation of Kiki Going to Toilet at 0015hrs triggered")
end



rule "SIMULATE_KIKI_TOILET_0328HRS"
when
  Time cron "0 28 3 1/1 * ? *" //EVERYDAY AT 0328HRS
then
  F2_KidsRoom_Light.sendCommand(ON)  
  F2_Bathroom_Light.sendCommand(ON)

//TURN OFF AFTER 5MINS
		createTimer(now.plusMinutes(3)) [|
        	if (F2_KidsRoom_Light.state==ON) {				
				sendCommand(F2_KidsRoom_Light, OFF)
				}
    	] 
		
		
//TURN OFF AFTER 2MINS
		createTimer(now.plusMinutes(1)) [|
        	if (F2_Bathroom_Light.state==ON) {				
				sendCommand(F2_Bathroom_Light, OFF)
				}
    	]
		
  logInfo("SIMULATE_KIKI_TOILET_0328HRS","Simulation of Kiki Going to Toilet at 0328hrs triggered") 
  sendNotification("ishmaelchibvuri@gmail.com", "Simulation of Kiki Going to Toilet at 0328hrs triggered","")
  sendMail("montecastellonotifications@gmail.com", "SIMULATE_KIKI_TOILET_0328HRS", "Simulation of Kiki Going to Toilet at 0328hrs triggered")
end




rule "SIMULATE_KIKI_GOING_TO_KITCHEN_1058HRS"
when
  Time cron "0 58 22 1/1 * ? *" //EVERYDAY AT 1058HRS
then
  F2_KidsRoom_Light.sendCommand(ON)  
 
  
  //TURN ON KITCHEN AFTER 1 MINUTE
		createTimer(now.plusMinutes(1)) [|
        	 GF_Kitchen_Light.sendCommand(ON)
    	]

//TURN OFF KITCHEN AFTER 4 MINUTES
		createTimer(now.plusMinutes(3)) [|
        	if (GF_Kitchen_Light.state==ON) {				
				sendCommand(GF_Kitchen_Light, OFF)
				}
    	] 
		
		
//TURN OFF KIKI LIGHT AFTER 5MINS
		createTimer(now.plusMinutes(5)) [|
        	if (F2_Bathroom_Light.state==ON) {				
				sendCommand(F2_Bathroom_Light, OFF)
				}
    	]
		
  logInfo("SIMULATE_KIKI_GOING_TO_KITCHEN_1058HRS","Simulation of Kiki Going to Kitchen at 1058hrs triggered") 
  sendNotification("ishmaelchibvuri@gmail.com", "Simulation of Kiki Going to Kitchen at 1058hrs triggered","")
  sendMail("montecastellonotifications@gmail.com", "SIMULATE_KIKI_GOING_TO_KITCHEN_1058HRS", "Simulation of Kiki Going to Kitchen at 1058hrs triggered")
end





rule "SIMULATE_VISITOR_DINING_TO_BATHROOM_0235HRS"
when
  Time cron "0 6 2 1/1 * ? *" //EVERYDAY AT 0235HRS
then
  GF_Dining_Light.sendCommand(ON)  
  
  //TURN ON BATHROOM AFTER 1 MINUTE
		createTimer(now.plusMinutes(1)) [|
        	 F2_Bathroom_Light.sendCommand(ON)
    	]

//TURN OFF BATHROOM AFTER 3 MINUTES
		createTimer(now.plusMinutes(3)) [|
        	if (F2_Bathroom_Light.state==ON) {				
				sendCommand(F2_Bathroom_Light, OFF)
				}
    	] 
		
		
//TURN OFF DINING LIGHT AFTER 5MINS
		createTimer(now.plusMinutes(5)) [|
        	if (GF_Dining_Light.state==ON) {				
				sendCommand(GF_Dining_Light, OFF)
				}
    	]
		
  logInfo("SIMULATE_VISITOR_DINING_TO_BATHROOM_0235HRS","Simulation of Visitor to upstairs bathroom at 0235hrs triggered") 
  sendNotification("ishmaelchibvuri@gmail.com", "Simulation of Visitor to upstairs bathroom at 0235hrs triggered","")
  sendMail("montecastellonotifications@gmail.com", "SIMULATE_VISITOR_DINING_TO_BATHROOM_0235HRS", "Simulation of Visitor to upstairs bathroom at 0235hrs triggered")
end



// GEYSER RULES


rule "GEYSER_WEEKDAYS_ON"
when
  Time cron "0 0 3 ? * MON,TUE,WED,THU,FRI *" //WEEKDAYS AT 0300HRS
then
  AT_Geyser.sendCommand(ON)    
  logInfo("GEYSER_WEEKDAYS_ON","Geyser has been turned ON") 
  sendNotification("ishmaelchibvuri@gmail.com", "Geyser has been turned ON","")
  sendMail("montecastellonotifications@gmail.com", "GEYSER_WEEKDAYS_ON", "Geyser has been turned ON")
end


rule "GEYSER_WEEKDAYS_OFF"
when
  Time cron "0 30 5 ? * MON,TUE,WED,THU,FRI *" //EVERYDAY AT 0530HRS
then
  AT_Geyser.sendCommand(OFF)   
  logInfo("GEYSER_WEEKDAYS_OFF","Geyser has been turned OFF") 
  sendNotification("ishmaelchibvuri@gmail.com", "Geyser has been turned OFF","")
  sendMail("montecastellonotifications@gmail.com", "GEYSER_WEEKDAYS_OFF", "Geyser has been turned OFF")
end


rule "GEYSER_WEEKEND_ON"
when
  Time cron "0 30 5 ? * SAT,SUN *" //WEEKEND ON AT 0530HRS
then
  AT_Geyser.sendCommand(ON)   
  logInfo("GEYSER_WEEKEND_ON","Geyser has been turned ON") 
  sendNotification("ishmaelchibvuri@gmail.com", "Geyser has been turned ON","")
  sendMail("montecastellonotifications@gmail.com", "GEYSER_WEEKEND_ON", "Geyser has been turned ON")
end


rule "GEYSER_WEEKEND_OFF"
when
  Time cron "0 30 9 ? * SAT,SUN *" //WEEKEND AT 0930HRS
then
  AT_Geyser.sendCommand(OFF)  
  logInfo("GEYSER_WEEKEND_OFF","Geyser has been turned OFF") 
  sendNotification("ishmaelchibvuri@gmail.com", "Geyser has been turned OFF","")
  sendMail("montecastellonotifications@gmail.com", "GEYSER_WEEKEND_OFF", "Geyser has been turned OFF")
end



// SPRINKLER RULES


rule "SPRINKLER_SYSTEM_AUTO_TIMER_ON"
when
  Time cron "0 30 3 1/2 * ? *" //EVERY 2 DAYS AT 0330HRS
then

  //Do something immediately
		
		  logInfo("SPRINKLER_SYSTEM_AUTO_TIMER_ON","The Garden has STARTED watering") 
		sendNotification("ishmaelchibvuri@gmail.com", "The Garden has STARTED watering","")
		  sendMail("montecastellonotifications@gmail.com", "SPRINKLER_SYSTEM_AUTO_TIMER_ON", "The Garden has STARTED watering")
		
		//TURN OFF AFTER 30 MINUTES
		createTimer(now.plusMinutes(30)) [|
        	if (OU_Water_Pump.state==ON) {				
				sendCommand(OU_Water_Pump, OFF)
				logInfo("SPRINKLER_SYSTEM_AUTO_TIMER_OFF","30 minutes of garden watering has STOPPED") 
			    sendNotification("ishmaelchibvuri@gmail.com", "30 minutes of garden watering has STOPPED","")
				sendMail("montecastellonotifications@gmail.com", "SPRINKLER_SYSTEM_AUTO_TIMER_OFF", "30 minutes of garden watering has STOPPED")
			}
    	]
end


rule "SPRINKLER_SYSTEM_MANUAL_TRIGGER"
when
  Item OU_Water_Pump received command // MANUAL TRIGGER
then
  if (OU_Water_Pump.state==ON) {
		//Do something immediately
			logInfo("SPRINKLER_SYSTEM_MANUAL_TRIGGER_ON","The Garden has STARTED watering") 
			sendNotification("ishmaelchibvuri@gmail.com", "The Garden has STARTED watering","")
			sendMail("montecastellonotifications@gmail.com", "SPRINKLER_SYSTEM_MANUAL_TRIGGER_ON", "The Garden has STARTED watering")
		
		//TURN OFF AFTER 30 MINUTES
		createTimer(now.plusMinutes(30)) [|
        	if (OU_Water_Pump.state==ON) {				
				sendCommand(OU_Water_Pump, OFF)
				
				logInfo("SPRINKLER_SYSTEM_MANUAL_TRIGGER_OFF","30 minutes of gardern watering has FINISHED") 
				sendNotification("ishmaelchibvuri@gmail.com", "30 minutes of gardern watering has FINISHED","")
				sendMail("montecastellonotifications@gmail.com", "SPRINKLER_SYSTEM_MANUAL_TRIGGER_OFF", "30 minutes of gardern watering has FINISHED")
			}
    	]
	}
end



rule "ARMING_ALARM_SYSTEM"
when
  Item Alarm_Arming_Switch received command // MANUAL TRIGGER
then

if(Alarm_Arming_Switch.state == ON){

  if(F2_Bedroom_Door.state == OPEN || GF_Front_Door.state == OPEN || GF_LivingRoom_Door.state == OPEN) {
  
			Alarm_Arming_Switch.sendCommand(OFF)
			Alarm_Door_Status_Light_NO_DISPLAY.sendCommand(ON) // DOOR LIGHTS ON
  
			if(F2_Bedroom_Door.state == OPEN) {
			  
			  logInfo("ARMING_ALARM_SYSTEM","Cannot Activate Alarm : Bedroom door is OPEN")
			  sendNotification("ishmaelchibvuri@gmail.com", "Cannot Activate Alarm : Bedroom door is OPEN","")
			  sendMail("montecastellonotifications@gmail.com", "ARMING_ALARM_SYSTEM", "Cannot Activate Alarm : Bedroom door is OPEN")
				
				}
				
			if(GF_Front_Door.state == OPEN) {
			  
			  logInfo("ARMING_ALARM_SYSTEM","Cannot Activate Alarm : Front door is OPEN")
			  sendNotification("ishmaelchibvuri@gmail.com", "Cannot Activate Alarm : Front door is OPEN","")
			  sendMail("montecastellonotifications@gmail.com", "ARMING_ALARM_SYSTEM", "Cannot Activate Alarm : Front door is OPEN")
			  
				
				}
				
			if(GF_LivingRoom_Door.state == OPEN) {
			  
			  logInfo("ARMING_ALARM_SYSTEM","Cannot Activate Alarm : Sitting Room door is OPEN")
			  sendNotification("ishmaelchibvuri@gmail.com", "Cannot Activate Alarm : Sitting Room door is OPEN","")
			  sendMail("montecastellonotifications@gmail.com", "ARMING_ALARM_SYSTEM", "Cannot Activate Alarm : Sitting Room door is OPEN")
			  
				
				}
  
    }
	
    else {
	
			  logInfo("ARMING_ALARM_SYSTEM","Alarm System is now ACTIVE")
			  sendNotification("ishmaelchibvuri@gmail.com", "Alarm System is now ACTIVE","")
			  sendMail("montecastellonotifications@gmail.com", "ARMING_ALARM_SYSTEM", "Alarm System is now ACTIVE")
  
    } 
	
	} else {
	
			  logInfo("UN-ARMING_ALARM_SYSTEM","Alarm System is now IN-ACTIVE")
			  sendNotification("ishmaelchibvuri@gmail.com", "Alarm System is now IN-ACTIVE","")
			  sendMail("montecastellonotifications@gmail.com", "UN-ARMING_ALARM_SYSTEM", "Alarm System is now IN-ACTIVE")

	
	}
end



rule "ALARM_TRIGGERED"
when
  Item F2_Bedroom_Door changed or
  Item GF_Front_Door changed or
  Item GF_LivingRoom_Door changed
then

if (Alarm_Arming_Switch.state == ON){

		  if(F2_Bedroom_Door.state == OPEN || GF_Front_Door.state == OPEN || GF_LivingRoom_Door.state == OPEN) {
		  
					Alarm_Door_Status_Light_NO_DISPLAY.sendCommand(ON) // DOOR LIGHTS ON
					Alarm_Panic_Level_One_NO_DISPLAY.sendCommand(ON) // SIREN NOW SCREEMING			
		  
					if(F2_Bedroom_Door.state == OPEN) {
					  
					  logInfo("ALERT","ALERT!! - Bedroom Door COMPROMISED")
					  sendNotification("ishmaelchibvuri@gmail.com", "ALERT!! - Bedroom Door COMPROMISED","")
					  sendMail("montecastellonotifications@gmail.com", "ALERT", "ALERT!! - Bedroom Door COMPROMISED")
						
						}
						
					if(GF_Front_Door.state == OPEN) {
					  
					  logInfo("ALERT","ALERT!! - Front Door COMPROMISED")
					  sendNotification("ishmaelchibvuri@gmail.com", "ALERT!! - Front Door COMPROMISED","")
					  sendMail("montecastellonotifications@gmail.com", "ALERT", "ALERT!! - Front Door COMPROMISED")
					  
						
						}
						
					if(GF_LivingRoom_Door.state == OPEN) {
					  
					  logInfo("ALERT","ALERT!! - Sitting Room Door COMPROMISED")
					  sendNotification("ishmaelchibvuri@gmail.com", "ALERT!! - Sitting Room Door COMPROMISED","")
					  sendMail("montecastellonotifications@gmail.com", "ALERT", "ALERT!! - Sitting Room Door COMPROMISED")
					  
						
						}
		  
			}
	}
	
    else {
	
	

		  if(F2_Bedroom_Door.state == OPEN || GF_Front_Door.state == OPEN || GF_LivingRoom_Door.state == OPEN) {
		  
					Alarm_Door_Status_Light_NO_DISPLAY.sendCommand(ON) // DOOR LIGHTS ON
		  
					if(F2_Bedroom_Door.state == OPEN) {
					  
					  logInfo("NO ALARM","Bedroom Door Open")
					  sendNotification("ishmaelchibvuri@gmail.com", "Bedroom Door Open","")
					  sendMail("montecastellonotifications@gmail.com", "NO ALARM", "Bedroom Door Open")
						
						}
						
					if(GF_Front_Door.state == OPEN) {
					  
					  logInfo("NO ALARM","Front Door Open")
					  sendNotification("ishmaelchibvuri@gmail.com", "Front Door Open","")
					  sendMail("montecastellonotifications@gmail.com", "NO ALARM", "Front Door Open")
					  
						
						}
						
					if(GF_LivingRoom_Door.state == OPEN) {
					  
					  logInfo("NO ALARM","Sitting Room Door Open")
					  sendNotification("ishmaelchibvuri@gmail.com", "Sitting Room Door Open","")
					  sendMail("montecastellonotifications@gmail.com", "NO ALARM", "Sitting Room Door Open")
					  
						
						}
		  
			} else {			
			
				Alarm_Door_Status_Light_NO_DISPLAY.sendCommand(OFF) // DOOR LIGHTS OFF
					  
				logInfo("DOORS CLOSED","All Doors now closed")
				sendNotification("ishmaelchibvuri@gmail.com", "All Doors now closed","")
				sendMail("montecastellonotifications@gmail.com", "DOORS CLOSED", "All Doors now closed")
			
			}
						
  
    } 
end



rule "SOFT_ALARM_SIREN_SCREAMER"
when
  Item Alarm_Panic_Level_One_NO_DISPLAY received command // WHEN ALARM IS RINGING
then
  if (Alarm_Panic_Level_One_NO_DISPLAY.state==ON) {
  
		//Do something immediately
		
			logInfo("SOFT_ALARM_SIREN_SCREAMER","Soft Alarm Triggered!!") 			 
			sendNotification("ishmaelchibvuri@gmail.com", "Soft Alarm Triggered!!","")
			sendMail("montecastellonotifications@gmail.com", "SOFT_ALARM_SIREN_SCREAMER", "Soft Alarm Triggered!!")
					
							// KEEP SCREAMING FOR 1 MINUTE
								
							createTimer(now.plusMinutes(1)) [|
													
								if (Alarm_Panic_Level_One_NO_DISPLAY.state == ON && Alarm_Arming_Switch.state == ON){									
					
								logInfo("SOFT_ALARM_SIREN_SCREAMER","1 Minute Lapsed - SIREN NOW SCREEMING!!") 
								sendNotification("ishmaelchibvuri@gmail.com", "1 Minute Lapsed - SIREN NOW SCREEMING!!","")
								sendMail("montecastellonotifications@gmail.com", "SOFT_ALARM_SIREN_SCREAMER", "1 Minute Lapsed - SIREN NOW SCREEMING!!")						
											
								// SWITCH ON HOOVER
								// TURN ON AND OFF THE LIGHTS
								 Alarm_Door_Status_Light_NO_DISPLAY.sendCommand(ON)
								 Alarm_Panic_Btn.sendCommand(ON)								 
								
											// KEEP SCREAMING FOR 7 MORE MINUTES
												
											createTimer(now.plusMinutes(7)) [|
																	
												if (Alarm_Panic_Level_One_NO_DISPLAY.state == ON){
																	
												Alarm_Panic_Level_One_NO_DISPLAY.sendCommand(OFF)
												Alarm_Panic_Btn.sendCommand(OFF)										
									
												logInfo("SOFT_ALARM_SIREN_SCREAMER","7 Minutes Lapsed - NO REPONSE!! Stopped Alarm Scream") 												
												sendNotification("ishmaelchibvuri@gmail.com", "7 Minutes Lapsed - NO REPONSE!! Stopped Alarm Scream","")
												sendMail("montecastellonotifications@gmail.com", "SOFT_ALARM_SIREN_SCREAMER", "7 Minutes Lapsed - NO REPONSE!! Stopped Alarm Scream")
																	  
												}	
											]
							
													  
								} else {
								
								Alarm_Panic_Level_One_NO_DISPLAY.sendCommand(OFF)
								
								}	
							]
													
	} else {	

    
	logInfo("SOFT_ALARM_SIREN_SCREAMER","Siren Turned Off!!") 
	sendMail("montecastellonotifications@gmail.com", "SOFT_ALARM_SIREN_SCREAMER", "Siren Turned Off!!")
	sendNotification("ishmaelchibvuri@gmail.com", "Siren Turned Off!!","")

	if (Alarm_Panic_Btn.state==ON) {
	  
			Alarm_Panic_Btn.sendCommand(OFF)
														
		}	
	
	 if(F2_Bedroom_Door.state == CLOSED && GF_Front_Door.state == CLOSED && GF_LivingRoom_Door.state == CLOSED) {
		  
					Alarm_Door_Status_Light_NO_DISPLAY.sendCommand(OFF) // DOOR LIGHTS OFF
		  }
	
	}
end






rule "LOUD_ALARM_SIREN_SCREAMER"
when
  Item Alarm_Panic_Btn received command // START OR STOP LOUD SIREN
then
  if (Alarm_Panic_Btn.state==OFF) { 
  
		Alarm_Panic_Level_One_NO_DISPLAY.sendCommand(OFF)
													
	} else {	
	
	logInfo("LOUD_ALARM_SIREN_SCREAMER","Panick Loud Alarm is SCREAMING!!") 
	sendMail("montecastellonotifications@gmail.com", "LOUD_ALARM_SIREN_SCREAMER", "Panick Loud Alarm is SCREAMING!!")
	sendNotification("ishmaelchibvuri@gmail.com", "Panick Loud Alarm is SCREAMING!!","")

	// KEEP SCREAMING FOR 8 MINUTES
												
											createTimer(now.plusMinutes(8)) [|
											
												Alarm_Panic_Btn.sendCommand(OFF)	
											]	
	
	}
end




rule "ALARM_PRESENCE_DETECTION"
when
  Item ishmael_huawei_is_home changed or
  Item esther_huawei_is_home changed or
  Item keith_pc_is_on changed
then

if(ishmael_huawei_is_home.state == OFF && esther_huawei_is_home.state == OFF && keith_pc_is_on.state == OFF) {
		  
					Alarm_Arming_Switch.sendCommand(ON) // ACTIVATE ALARM
					logInfo("ALARM_PRESENCE_DETECTION","CANNOT DETECT ANYONE AT HOME!! - Activating Alarm")
					sendNotification("ishmaelchibvuri@gmail.com", "CANNOT DETECT ANYONE AT HOME!! - Activating Alarm","")
					sendMail("montecastellonotifications@gmail.com", "ALARM_PRESENCE_DETECTION", "CANNOT DETECT ANYONE AT HOME!! - Activating Alarm")
		  		  
			} 
			
			else {
			
			if(ishmael_huawei_is_home.state == ON || esther_huawei_is_home.state == ON || keith_pc_is_on.state == ON) {
		  	
		  
					if(ishmael_huawei_is_home.state == ON) {
					  
					  logInfo("ALARM_PRESENCE_DETECTION","ISHMAEL - Detected to be HOME!!")
					  sendNotification("ishmaelchibvuri@gmail.com", "ISHMAEL - Detected to be HOME!!","")
					  sendMail("montecastellonotifications@gmail.com", "ALARM_PRESENCE_DETECTION", "ISHMAEL - Detected to be HOME!!")
						
						}
						
					if(esther_huawei_is_home.state == ON) {
					  
					  logInfo("ALARM_PRESENCE_DETECTION","ESTHER - Detected to be HOME!!")
					  sendNotification("ishmaelchibvuri@gmail.com", "ESTHER - Detected to be HOME!!","")
					  sendMail("montecastellonotifications@gmail.com", "ALARM_PRESENCE_DETECTION", "ESTHER - Detected to be HOME!!")
					  
						
						}
						
					if(keith_pc_is_on.state == ON) {
					  
					  logInfo("ALARM_PRESENCE_DETECTION","KEITH - Detected to be HOME!!")
					  sendNotification("ishmaelchibvuri@gmail.com", "KEITH - Detected to be HOME!!","")
					  sendMail("montecastellonotifications@gmail.com", "ALARM_PRESENCE_DETECTION", "KEITH - Detected to be HOME!!")
					  
						
						}
		  
			}
			
			
			}
			
end

// ALL LIGHTS OFF AT 6AM

rule "ALL_INDOORS_LIGHTS_OFF"
when
  Time cron "0 0 6 1/1 * ? *" //EVERYDAY AT 0600HRS
then

  GF_Kitchen_Light.sendCommand(OFF)  
  GF_Dining_Light.sendCommand(OFF)  
  GF_LivingRoom_Light.sendCommand(OFF)   
  F2_KidsRoom_Light.sendCommand(OFF) 
  F2_Bathroom_Light.sendCommand(OFF)  
  
  logInfo("ALL_INDOORS_LIGHTS_OFF","Indoors lights have been turned OFF")  
  sendNotification("ishmaelchibvuri@gmail.com", "Indoors lights have been turned OFF","")
  sendMail("montecastellonotifications@gmail.com", "ALL_INDOORS_LIGHTS_OFF", "Indoors lights have been turned OFF")
end



// ALL INDOORS LIGHTS ON AT 6PM

rule "INDOORS_LIGHTS_AUTOMATION_ON"
when
  Time cron "0 33 18 1/1 * ? *" //EVERYDAY AT 1833HRS
then

GF_Kitchen_Light.sendCommand(ON)
GF_Dining_Light.sendCommand(ON)
F2_Bathroom_Light.sendCommand(ON) 
GF_LivingRoom_Light.sendCommand(ON) 

  logInfo("INDOORS_LIGHTS_AUTOMATION_ON","Indoors lights have been turned ON")  
  sendNotification("ishmaelchibvuri@gmail.com", "Indoors lights have been turned ON","")
  sendMail("montecastellonotifications@gmail.com", "INDOORS_LIGHTS_AUTOMATION_ON", "Indoors lights have been turned ON")

//TURN OFF AFTER 2.5HRS
		createTimer(now.plusMinutes(150)) [|//150mins
        	if (GF_Kitchen_Light.state==ON) {				
				sendCommand(GF_Kitchen_Light, OFF)
				sendCommand(GF_LivingRoom_Light, OFF)
				
				logInfo("INDOORS_LIGHTS_AUTOMATION_ON","Kitchen and Sitting Rooms Lights OFF")  
				sendNotification("ishmaelchibvuri@gmail.com", "Kitchen and Sitting Rooms Lights OFF","")
				sendMail("montecastellonotifications@gmail.com", "INDOORS_LIGHTS_AUTOMATION_ON", "Kitchen and Sitting Rooms Lights OFF")
  
				}
    	]
 
//TURN OFF AFTER 3HRS
		createTimer(now.plusMinutes(180)) [| // 180mins
        	if (GF_Dining_Light.state==ON) {				
				sendCommand(GF_Dining_Light, OFF)			
				
				logInfo("INDOORS_LIGHTS_AUTOMATION_ON","Dining Room Light OFF")  
				sendNotification("ishmaelchibvuri@gmail.com", "Dining Room Light OFF","")
				sendMail("montecastellonotifications@gmail.com", "INDOORS_LIGHTS_AUTOMATION_ON", "Dining Room Light OFF")
				}
    	] 
		
		
//TURN OFF AFTER 2HRS
		createTimer(now.plusMinutes(120)) [| //120mins
        	if (F2_Bathroom_Light.state==ON) {				
				sendCommand(F2_Bathroom_Light, OFF)
						
				
				logInfo("INDOORS_LIGHTS_AUTOMATION_ON","Bathroom Room Light OFF")  
				sendNotification("ishmaelchibvuri@gmail.com", "Bathroom Room Light OFF","")
				sendMail("montecastellonotifications@gmail.com", "INDOORS_LIGHTS_AUTOMATION_ON", "Bathroom Room Light OFF")
				}
    	] 
   

end